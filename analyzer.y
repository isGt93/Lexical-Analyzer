%{
	#include<stdio.h>
	#include<stdlib.h>
	int yylex();
	void yyerror(const char *s);
%}

%token START
%token END
%token S_COMMENT1
%token S_COMMENT2
%token MULTILINE
%token S_VARIABLE
%token S_UNDERSCORE
%token S_SEMICOLON
%token O_CONCATENATION
%token O_CONCATENATIONA
%token W_RESERVED
%token O_ARITHMETIC
%token O_COMPARISON
%token O_ASSIGNMENT
%token O_INC_DEC
%token O_LOGICAL
%token T_INTEGER
%token T_FLOAT
%token T_STRING
%token IDENTIFIER
%token S_QUOTES
%token T_BOOLEAN
%token T_NULL
%token ECHO
%token EQUALS
%token GLOBAL_STATIC
%token S_COMA
%token C_PRINT

%start INIT
%% 

	INIT:	START CONTENT END;
	CONTENT: PRINT
		| PRINT CONTENT 
		| COMMENT
		| COMMENT CONTENT
		| GLO_STA
		| GLO_STA CONTENT;
	PRINT: ECHO CONCATENATION S_SEMICOLON
		|C_PRINT CONCATENATION S_SEMICOLON;
	CONCATENATION: T_STRING O_CONCATENATION S_VARIABLE IDENTIFIER O_CONCATENATION T_STRING
			| T_STRING O_CONCATENATION S_VARIABLE IDENTIFIER O_CONCATENATION T_STRING CONCATENATION
			| O_CONCATENATION S_VARIABLE IDENTIFIER O_CONCATENATION T_STRING
			| O_CONCATENATION S_VARIABLE IDENTIFIER O_CONCATENATION T_STRING CONCATENATION
			|S_VARIABLE IDENTIFIER
			|S_VARIABLE IDENTIFIER O_ARITHMETIC S_VARIABLE IDENTIFIER
			|T_STRING
			|T_STRING S_COMA CONCATENATION;
	COMMENT: S_COMMENT1
		| S_COMMENT2
		| MULTILINE;
	GLO_STA: GLOBAL_STATIC VARIABLE
		| GLOBAL_STATIC MULTIPLES S_SEMICOLON
		| VARIABLE;
	VARIABLE: S_VARIABLE IDENTIFIER EQUALS T_INTEGER S_SEMICOLON
		| S_VARIABLE IDENTIFIER EQUALS T_FLOAT S_SEMICOLON
		| S_VARIABLE IDENTIFIER	EQUALS T_BOOLEAN S_SEMICOLON
		| S_VARIABLE IDENTIFIER	EQUALS T_NULL S_SEMICOLON
		| S_VARIABLE IDENTIFIER	EQUALS T_STRING S_SEMICOLON
		| S_VARIABLE IDENTIFIER EQUALS OPERATION S_SEMICOLON
		| S_VARIABLE IDENTIFIER O_INC_DEC S_SEMICOLON;
	OPERATION: S_VARIABLE IDENTIFIER O_ARITHMETIC S_VARIABLE IDENTIFIER
		| S_VARIABLE IDENTIFIER O_ARITHMETIC S_VARIABLE IDENTIFIER OPERATION
		| O_ARITHMETIC S_VARIABLE IDENTIFIER 
		| O_ARITHMETIC S_VARIABLE IDENTIFIER OPERATION;
	MULTIPLES: S_VARIABLE IDENTIFIER
		| S_VARIABLE IDENTIFIER S_COMA MULTIPLES
%%

main()
{
	if(yyparse()==0)
	printf("\nAnalisis concluido sin errores\n");
}
yyerror(char* mensaje)
{
	printf("\nAnalisis suspendido");
	printf("\nMensaje: %s",mensaje);
}
